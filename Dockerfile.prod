# Ref: https://testdriven.io/blog/dockerizing-flask-with-postgres-gunicorn-and-nginx/
#    : https://github.com/testdrivenio/flask-on-docker

###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.0-alpine as builder

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add --no-cache gcc python3-dev musl-dev postgresql-dev libffi-dev py-cffi libpq \
    && mkdir /home/clix_dashboard_backend

# set work directory
WORKDIR /home/clix_dashboard_backend

# copy project code and required file as well as directories
COPY ./app/ /home/clix_dashboard_backend/app/

# copy project code and required file as well as directories
COPY ./requirements.txt ./clix_dashboard_backend.py ./config.py ./entrypoint.sh /home/clix_dashboard_backend/

# lint
RUN pip install --upgrade pip \
    && pip install flake8
RUN flake8 --ignore=E501,F401 .

# install dependencies
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /home/clix_dashboard_backend/wheels -r requirements.txt


####################
# FINAL PROD IMAGE #
####################

# pull official base image
FROM python:3.8.0-alpine

# create directory for the app user
RUN mkdir -p /home/clix_dashboard_backend

# create the clix_dashboard_backend user
RUN addgroup -S clix_dashboard_backend && adduser -S clix_dashboard_backend -G clix_dashboard_backend

# create the appropriate directories
ENV CUSER_HOME=/home/clix_dashboard_backend/
WORKDIR $CUSER_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /home/clix_dashboard_backend/wheels /wheels
COPY --from=builder /home/clix_dashboard_backend/requirements.txt .
RUN pip install --upgrade pip \
    && pip install --no-cache /wheels/*

# copy project code and required file as well as directories
COPY ./app/ /home/clix_dashboard_backend/app/

# copy project code and required file as well as directories
COPY ./requirements.txt ./clix_dashboard_backend.py ./config.py ./entrypoint.sh /home/clix_dashboard_backend/

# chown all the files to the clix_dashboard_backend user
RUN chown -R clix_dashboard_backend:clix_dashboard_backend $CUSER_HOME

# change to the clix_dashboard_backend user
USER clix_dashboard_backend

# run entrypoint.prod.sh
ENTRYPOINT ["sh", "/home/clix_dashboard_backend/entrypoint.prod.sh"]